const fs = require("fs");
const path = require("path");

const iconsDir = path.join(__dirname, "../assets/imageIcons");
const outputFile = path.join(__dirname, "../src/util/iconMap.ts");

// Get all .png files in the icons directory
const files = fs
  .readdirSync(iconsDir)
  .filter((file) => file.endsWith(".png"));

// Check if default.png exists
const hasDefault = files.includes("default.png");

// Create map entries (skip default, weâ€™ll handle separately)
const mapEntries = files
  .filter((file) => file !== "default.png")
  .map((file) => {
    const key = file.replace(".png", "");
    return `  "${key}": require("../../assets/imageIcons/${file}"),`;
  });

// Build union type
const keys = files
  .filter((file) => file !== "default.png")
  .map((file) => `"${file.replace(".png", "")}"`);

if (hasDefault) keys.push(`"default"`);

const unionType = keys.length > 0 ? keys.join(" | ") : "string";

const fileContent = `
// ðŸš€ Auto-generated by scripts/generateIconMap.js
// Do NOT edit this file manually.

import { ImageSourcePropType } from "react-native";

export type IconName = ${unionType};

export const iconMap: Record<IconName, ImageSourcePropType> = {
${mapEntries.join("\n")}
${hasDefault ? `  "default": require("../../assets/imageIcons/default.png"),` : ""}
};
`;

fs.writeFileSync(outputFile, fileContent, "utf8");

console.log("âœ… iconMap.ts generated successfully!");
console.log(`Generated file at: ${outputFile}`);